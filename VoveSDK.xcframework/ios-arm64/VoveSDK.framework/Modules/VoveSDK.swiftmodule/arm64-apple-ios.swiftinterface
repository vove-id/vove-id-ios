// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name VoveSDK
import Combine
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
@_exported import VoveSDK
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims

public enum VerificationResult {
  case success, failure, pending, canceled
  public static func == (a: VoveSDK.VerificationResult, b: VoveSDK.VerificationResult) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}

public enum VoveEnvironment {
  case sandbox, production
  public static func == (a: VoveSDK.VoveEnvironment, b: VoveSDK.VoveEnvironment) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum VoveLocale {
  case en, fr, ar, arMA
  public static func == (a: VoveSDK.VoveLocale, b: VoveSDK.VoveLocale) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class Vove {
  public static func start(environment: VoveSDK.VoveEnvironment, sessionToken: Swift.String, completion: @escaping (VoveSDK.VerificationResult?) -> Swift.Void)
  public static func setVocalGuidanceEnabled(_ isEnabled: Swift.Bool)
  public static func setLocal(local: VoveSDK.VoveLocale)
  public static func getCurrentLocale() -> VoveSDK.VoveLocale?
  @objc deinit
}
extension VoveSDK.VerificationResult : Swift.Equatable {}
extension VoveSDK.VerificationResult : Swift.Hashable {}
extension VoveSDK.VoveEnvironment : Swift.Equatable {}
extension VoveSDK.VoveEnvironment : Swift.Hashable {}
extension VoveSDK.VoveLocale : Swift.Equatable {}
extension VoveSDK.VoveLocale : Swift.Hashable {}
